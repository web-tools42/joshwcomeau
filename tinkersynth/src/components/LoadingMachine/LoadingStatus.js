import React from 'react';
import styled, { keyframes } from 'styled-components';

import { COLORS } from '../../constants';

const LoadingStatus = () => {
  const [status, setStatus] = React.useState('warning');

  React.useEffect(() => {
    const timeoutId = window.setTimeout(() => {
      setStatus('OK');
    }, 3500);

    return () => {
      window.clearTimeout(timeoutId);
    };
  }, []);

  return (
    <Wrapper>
      {status === 'warning' ? (
        <Pulse>
          <Warning />
        </Pulse>
      ) : (
        <svg width="24" height="28" viewBox="0 0 24 28" fill="none">
          <circle cx="12" cy="9" r="4" fill="#32FF98" />
          <path
            d="M11.7676 19.5195C11.7676 20.5898 11.4707 21.4688 10.877 22.1562C10.2832 22.8398 9.52344 23.1816 8.59766 23.1816C7.67969 23.1816 6.92188 22.8379 6.32422 22.1504C5.73047 21.4629 5.43359 20.5859 5.43359 19.5195C5.43359 18.4414 5.72852 17.5625 6.31836 16.8828C6.9082 16.1992 7.66797 15.8574 8.59766 15.8574C9.52344 15.8574 10.2832 16.2012 10.877 16.8887C11.4707 17.5762 11.7676 18.4531 11.7676 19.5195ZM8.59766 22.3496C9.25391 22.3496 9.76953 22.0996 10.1445 21.5996C10.5234 21.0957 10.7129 20.4023 10.7129 19.5195C10.7129 18.6367 10.5234 17.9453 10.1445 17.4453C9.76953 16.9414 9.25391 16.6895 8.59766 16.6895C7.9375 16.6895 7.41992 16.9395 7.04492 17.4395C6.67383 17.9355 6.48828 18.6289 6.48828 19.5195C6.48828 20.4023 6.67578 21.0957 7.05078 21.5996C7.42969 22.0996 7.94531 22.3496 8.59766 22.3496ZM14.6094 22.1738H15.002C15.2324 22.1738 15.3945 22.2051 15.4883 22.2676C15.582 22.3301 15.6289 22.4336 15.6289 22.5781C15.6289 22.7344 15.5879 22.8438 15.5059 22.9062C15.4238 22.9688 15.2676 23 15.0371 23H13.0332C12.9004 23 12.7988 22.9648 12.7285 22.8945C12.6621 22.8203 12.6289 22.7148 12.6289 22.5781C12.6289 22.4336 12.666 22.3301 12.7402 22.2676C12.8184 22.2051 12.9492 22.1738 13.1328 22.1738H13.3203H13.6953V16.8945H13.3203C13.0234 16.8945 12.834 16.8652 12.752 16.8066C12.6699 16.7441 12.6289 16.6328 12.6289 16.4727C12.6289 16.3359 12.6621 16.2324 12.7285 16.1621C12.7988 16.0879 12.9004 16.0508 13.0332 16.0508H15.0371C15.2676 16.0508 15.4238 16.082 15.5059 16.1445C15.5879 16.207 15.6289 16.3164 15.6289 16.4727C15.6289 16.6289 15.5762 16.7383 15.4707 16.8008C15.3652 16.8633 15.166 16.8945 14.873 16.8945H14.6094V19.2793L17.0527 16.8945H16.9824H16.8535C16.6621 16.8945 16.5234 16.8613 16.4375 16.7949C16.3516 16.7285 16.3086 16.6211 16.3086 16.4727C16.3086 16.3203 16.3418 16.2129 16.4082 16.1504C16.4746 16.084 16.582 16.0508 16.7305 16.0508H18.459C18.5918 16.0508 18.6934 16.0879 18.7637 16.1621C18.834 16.2324 18.8691 16.3359 18.8691 16.4727C18.8691 16.625 18.8223 16.7344 18.7285 16.8008C18.6387 16.8633 18.4766 16.8945 18.2422 16.8945H18.1602L15.8926 19.0859C16.2324 19.1562 16.5605 19.375 16.877 19.7422C17.1934 20.1094 17.6855 20.9199 18.3535 22.1738H18.459C18.7012 22.1738 18.8633 22.2031 18.9453 22.2617C19.0273 22.3203 19.0684 22.4258 19.0684 22.5781C19.0684 22.7148 19.0332 22.8203 18.9629 22.8945C18.8965 22.9648 18.7969 23 18.6641 23H18.1016C17.9766 23 17.8848 22.9863 17.8262 22.959C17.7715 22.9316 17.7148 22.8691 17.6562 22.7715C17.6211 22.7168 17.4043 22.3203 17.0059 21.582L16.7773 21.1543C16.5312 20.6973 16.2852 20.3555 16.0391 20.1289C15.793 19.8984 15.5312 19.7637 15.2539 19.7246L14.6094 20.334V22.1738Z"
            fill="white"
          />
        </svg>
      )}
    </Wrapper>
  );
};

const pulse = keyframes`
  0% {
    opacity: 0.25;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.25;
  }
`;

const fadeIn = keyframes`
  from { opacity: 0; }
  to { opacity: 1;}
`;

const Wrapper = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 28px;
  background: #2b2b2b;
  border-radius: 4px;
`;

const Pulse = styled.div`
  animation: ${pulse} 300ms linear infinite;
`;

const Warning = styled.div`
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background: ${COLORS.yellow[300]};
  animation: ${fadeIn} 2000ms 500ms both;
`;

export default LoadingStatus;
